program semanticTestClass


    const Tp t = false;       
    const int c1 = 1;        
    const bool c2 = 'b';

    
    bool bool1;
    
    char c1,c2,c3;
    int int1,int2,int3,intarr1[];

    int fakeType;
    fakeType fakeTypeVar;

    double dbl1;


    class ExtendsGarbage extends c1
    {
        {
            
        }
    }

    class Cls0
    {
        int a1,a;
        {
            void setA(int a)
            {
                this.a = a;
            }
        }
    }

    class Cls1
    {

        {
            void clsMeth1(int a,char b)
            
            {
            }
        }
    }

    class Cls2 extends Cls1
    {
        Cls0 c0;

        {
            void clsMeth2()
                int c;
            {
            }

            void setc0(Cls0 newC0)
            {
                this.c0 = newC0;
            }
        }
    }
    Cls1 x1,x2;

    Cls2 x3;


    class Cls3 extends Cls2
    {
        Cls1 cls1;
        {
            void meth()
            {
                clsMeth1(1,'a');
            }

            void clsMeth1(int a,char b)
            
            {

            }
        }
    }
{
    double errorFunction(string s) float f; {}

    char foo(int param,char c)
    {
        return 'a';
        param = 1;
        return chr(param);
    }

    int foo2(bool param1)
    {
        return 2;
    }

    int f(int x){
        return x;
    }

	void main(int formParb, int formPara)
        int methVara;
        char methChar;
        Cls1 cls1Inst;
        Cls1 cls1Arr[];
        Cls3 cls3Inst;
        Cls0 c0;
	{
        methVara = int1 - -int1;

        intarr1 = new int[15];

        intarr1[int1] = int1;
        intarr1[int1] = cls1Inst;
        intarr1[cls1Inst] = int1;

        intarr1 = new char[5];
        int1 = new int;

        int1 = -int1 * (int1 + 3);
        int1 = -methChar * (int1 + 3);

        

        x1 = new Cls1;
        x3 = new Cls2;

        
        x3.clsMeth1(1,'a');
        cls1Arr[2].clsMeth1(1,'a');
        int1 = x3.c0.a;

        switch(int1){
        	case 1: break;
        	case 2: break;
        	case 1: continue;
        }

        do{
            continue;
        }while(int1<=int1);

        continue;

        foo(foo2(true),'a');

        f(f(f(f(int1))));

        cls3Inst.clsMeth1(1,'a');
        cls3Inst.cls1.clsMeth1(1,'a');


        cls3Inst.nothing.clsMeth1(1,'a');

        cls3Inst.setc0(c0);
	}
}


