{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "generateCode",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "lexerGen",
                "fixAstPackage"
            ]
        },
        {
            "label": "clean",
            "dependsOn": [
                "lexerClean",
                "parserClean"
            ]
        },
        {
            "label": "lexerGen",
            "command": "java",
            "args": [
                "-jar",
                "${workspaceFolder}/lib/JFlex.jar",
                "-d",
                "${workspaceFolder}/src/compiler",
                "${workspaceFolder}/genFiles/mjlexer.lex"
            ],
            "group": "build",
            "dependsOn": "lexClean"
        },
        {
            "label": "lexClean",
            "command": "rm",
            "args": [
                "-f",
                "${workspaceFolder}/src/compiler/Yylex.java"
            ]
        },
        {
            "label": "parserGen",
            "command": "java",
            "args": [
                "-jar",
                "${workspaceFolder}/lib/cup_v10k.jar",
                "-destdir",
                "${workspaceFolder}/src/compiler",
                "-package",
                "compiler",
                "-ast",
                "src.ast",
                "-parser",
                "Parser",
                "-buildtree",
                // "-dump_states",
                "${workspaceFolder}/genFiles/mjparser.cup",
            ],
            "group": "build",
            "dependsOn": "parserClean"
        },
        {
            "label": "parserClean",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/src/compiler/Parser.java",
                "${workspaceFolder}/src/compiler/sym.java",
                "${workspaceFolder}/src/ast/"
            ],
        },
        {
            "label": "fixAstPackage",
            // "windows": {
            //     "type": "shell",
            //     "command": "foreach($file in Get-ChildItem ${workspaceFolder}/src/ast *.java) { (Get-Content ${workspaceFolder}/src/ast/$file).Replace('src.ast','ast') | Set-Content ${workspaceFolder}/src/ast/$file}",
            //     "args": []
            // },
            "command": "sed",
            "args": [
                "-i",
                "'s/src.ast/ast/g'",
                // mora ovakav path 
                "${workspaceFolder}/src/ast/*.java"
            ],
            "dependsOn": "parserGen"
        }
    ]
}