INFO  18:27:19,662 - Compiling source file: C:\Users\pajse\Desktop\ppProj\microJavaCompiler\testFiles\program.mj
INFO  18:27:19,667 - #29 program
INFO  18:27:19,680 - #43 p
INFO  18:27:19,680 - #33 const
INFO  18:27:19,681 - #43 int
INFO  18:27:19,681 - #43 size
INFO  18:27:19,695 - #22 =
INFO  18:27:19,710 - #44 10
INFO  18:27:19,726 - #23 ;
INFO  18:27:19,726 - #43 class
INFO  18:27:19,727 - #43 Table
INFO  18:27:19,727 - #27 {
INFO  18:27:19,727 - #43 int
INFO  18:27:19,728 - #43 pos
INFO  18:27:19,728 - #20 [
INFO  18:27:19,728 - #21 ]
INFO  18:27:19,729 - #24 ,
INFO  18:27:19,729 - #43 neg
INFO  18:27:19,730 - #20 [
INFO  18:27:19,745 - #21 ]
INFO  18:27:19,755 - #23 ;
INFO  18:27:19,756 - #27 {
INFO  18:27:19,757 - #4 void
INFO  18:27:19,757 - #43 putp
INFO  18:27:19,758 - #25 (
INFO  18:27:19,765 - #43 int
INFO  18:27:19,767 - #43 a
INFO  18:27:19,768 - #24 ,
INFO  18:27:19,768 - #43 int
INFO  18:27:19,769 - #43 idx
INFO  18:27:19,769 - #26 )
INFO  18:27:19,770 - #27 {
INFO  18:27:19,770 - #43 this
INFO  18:27:19,771 - #43 pos
INFO  18:27:19,771 - #20 [
INFO  18:27:19,771 - #43 idx
INFO  18:27:19,779 - #21 ]
INFO  18:27:19,781 - #22 =
INFO  18:27:19,782 - #43 a
INFO  18:27:19,782 - #23 ;
INFO  18:27:19,782 - #28 }
INFO  18:27:19,783 - #4 void
INFO  18:27:19,783 - #43 putn
INFO  18:27:19,783 - #25 (
INFO  18:27:19,784 - #43 int
INFO  18:27:19,784 - #43 a
INFO  18:27:19,784 - #24 ,
INFO  18:27:19,785 - #43 int
INFO  18:27:19,785 - #43 idx
INFO  18:27:19,785 - #26 )
INFO  18:27:19,786 - #27 {
INFO  18:27:19,786 - #43 this
INFO  18:27:19,787 - #43 neg
INFO  18:27:19,787 - #20 [
INFO  18:27:19,788 - #43 idx
INFO  18:27:19,788 - #21 ]
INFO  18:27:19,788 - #22 =
INFO  18:27:19,789 - #43 a
INFO  18:27:19,789 - #23 ;
INFO  18:27:19,789 - #28 }
INFO  18:27:19,790 - #43 int
INFO  18:27:19,790 - #43 getp
INFO  18:27:19,791 - #25 (
INFO  18:27:19,791 - #43 int
INFO  18:27:19,791 - #43 idx
INFO  18:27:19,792 - #26 )
INFO  18:27:19,792 - #27 {
INFO  18:27:19,802 - #3 return
INFO  18:27:19,803 - #43 pos
INFO  18:27:19,803 - #20 [
INFO  18:27:19,804 - #43 idx
INFO  18:27:19,804 - #21 ]
INFO  18:27:19,805 - #23 ;
INFO  18:27:19,805 - #28 }
INFO  18:27:19,806 - #43 int
INFO  18:27:19,806 - #43 getn
INFO  18:27:19,814 - #25 (
INFO  18:27:19,816 - #43 int
INFO  18:27:19,817 - #43 idx
INFO  18:27:19,817 - #26 )
INFO  18:27:19,818 - #27 {
INFO  18:27:19,818 - #3 return
INFO  18:27:19,819 - #43 neg
INFO  18:27:19,830 - #20 [
INFO  18:27:19,831 - #43 idx
INFO  18:27:19,831 - #21 ]
INFO  18:27:19,832 - #23 ;
INFO  18:27:19,832 - #28 }
INFO  18:27:19,833 - #28 }
INFO  18:27:19,833 - #28 }
INFO  18:27:19,833 - #43 Table
INFO  18:27:19,834 - #43 val
INFO  18:27:19,851 - #23 ;
INFO  18:27:19,853 - #27 {
INFO  18:27:19,854 - #4 void
INFO  18:27:19,854 - #43 f
INFO  18:27:19,855 - #25 (
INFO  18:27:19,855 - #43 char
INFO  18:27:19,855 - #43 ch
INFO  18:27:19,856 - #24 ,
INFO  18:27:19,856 - #43 int
INFO  18:27:19,856 - #43 a
INFO  18:27:19,857 - #24 ,
INFO  18:27:19,857 - #43 int
INFO  18:27:19,857 - #43 arg
INFO  18:27:19,858 - #26 )
INFO  18:27:19,858 - #43 int
INFO  18:27:19,858 - #43 x
INFO  18:27:19,858 - #23 ;
INFO  18:27:19,859 - #27 {
INFO  18:27:19,859 - #43 x
INFO  18:27:19,859 - #22 =
INFO  18:27:19,860 - #43 arg
INFO  18:27:19,860 - #23 ;
INFO  18:27:19,860 - #28 }
INFO  18:27:19,861 - #4 void
INFO  18:27:19,861 - #43 main
INFO  18:27:19,861 - #25 (
INFO  18:27:19,862 - #26 )
INFO  18:27:19,862 - #43 int
INFO  18:27:19,862 - #43 x
INFO  18:27:19,862 - #24 ,
INFO  18:27:19,863 - #43 i
INFO  18:27:19,863 - #23 ;
INFO  18:27:19,863 - #43 char
INFO  18:27:19,864 - #43 c
INFO  18:27:19,864 - #23 ;
INFO  18:27:19,865 - #27 {
INFO  18:27:19,865 - #43 val
INFO  18:27:19,865 - #22 =
INFO  18:27:19,866 - #35 new
INFO  18:27:19,866 - #43 Table
INFO  18:27:19,866 - #23 ;
INFO  18:27:19,867 - #43 val
INFO  18:27:19,867 - #43 pos
INFO  18:27:19,867 - #22 =
INFO  18:27:19,868 - #35 new
INFO  18:27:19,868 - #43 int
INFO  18:27:19,869 - #20 [
INFO  18:27:19,869 - #43 size
INFO  18:27:19,869 - #21 ]
INFO  18:27:19,869 - #23 ;
INFO  18:27:19,870 - #43 val
INFO  18:27:19,871 - #43 neg
INFO  18:27:19,871 - #22 =
INFO  18:27:19,872 - #35 new
INFO  18:27:19,872 - #43 int
INFO  18:27:19,872 - #20 [
INFO  18:27:19,873 - #43 size
INFO  18:27:19,873 - #21 ]
INFO  18:27:19,873 - #23 ;
INFO  18:27:19,874 - #43 i
INFO  18:27:19,874 - #22 =
INFO  18:27:19,874 - #44 0
INFO  18:27:19,874 - #23 ;
INFO  18:27:19,875 - #43 do
INFO  18:27:19,875 - #27 {
INFO  18:27:19,875 - #43 val
INFO  18:27:19,876 - #43 putp
INFO  18:27:19,876 - #25 (
INFO  18:27:19,876 - #44 0
INFO  18:27:19,876 - #24 ,
INFO  18:27:19,877 - #43 i
INFO  18:27:19,877 - #26 )
INFO  18:27:19,877 - #23 ;
INFO  18:27:19,877 - #43 val
INFO  18:27:19,878 - #43 putn
INFO  18:27:19,878 - #25 (
INFO  18:27:19,879 - #44 0
INFO  18:27:19,879 - #24 ,
INFO  18:27:19,879 - #43 i
INFO  18:27:19,879 - #26 )
INFO  18:27:19,880 - #23 ;
INFO  18:27:19,880 - #43 i
INFO  18:27:19,880 - #18 ++
INFO  18:27:19,880 - #23 ;
INFO  18:27:19,881 - #28 }
INFO  18:27:19,881 - #43 while
INFO  18:27:19,881 - #25 (
INFO  18:27:19,882 - #43 i
INFO  18:27:19,882 - #14 <
INFO  18:27:19,882 - #43 size
INFO  18:27:19,882 - #26 )
INFO  18:27:19,883 - #23 ;
INFO  18:27:19,883 - #43 f
INFO  18:27:19,883 - #25 (
INFO  18:27:19,883 - #43 c
INFO  18:27:19,884 - #24 ,
INFO  18:27:19,884 - #43 x
INFO  18:27:19,884 - #24 ,
INFO  18:27:19,885 - #43 i
INFO  18:27:19,885 - #26 )
INFO  18:27:19,885 - #23 ;
INFO  18:27:19,885 - #36 read
INFO  18:27:19,886 - #25 (
INFO  18:27:19,886 - #43 x
INFO  18:27:19,887 - #26 )
INFO  18:27:19,899 - #23 ;
INFO  18:27:19,901 - #43 do
INFO  18:27:19,902 - #27 {
INFO  18:27:19,902 - #34 if
INFO  18:27:19,903 - #25 (
INFO  18:27:19,903 - #43 x
INFO  18:27:19,904 - #15 <=
INFO  18:27:19,913 - #44 0
INFO  18:27:19,914 - #26 )
INFO  18:27:19,914 - #30 break
INFO  18:27:19,915 - #23 ;
INFO  18:27:19,915 - #34 if
INFO  18:27:19,916 - #25 (
INFO  18:27:19,916 - #44 0
INFO  18:27:19,916 - #15 <=
INFO  18:27:19,917 - #43 x
INFO  18:27:19,917 - #16 &&
INFO  18:27:19,927 - #43 x
INFO  18:27:19,928 - #14 <
INFO  18:27:19,928 - #43 size
INFO  18:27:19,928 - #26 )
INFO  18:27:19,929 - #27 {
INFO  18:27:19,929 - #43 val
INFO  18:27:19,930 - #43 putp
INFO  18:27:19,931 - #25 (
INFO  18:27:19,931 - #43 val
INFO  18:27:19,941 - #43 getp
INFO  18:27:19,941 - #25 (
INFO  18:27:19,942 - #43 x
INFO  18:27:19,942 - #26 )
INFO  18:27:19,943 - #5 +
INFO  18:27:19,943 - #44 1
INFO  18:27:19,944 - #26 )
INFO  18:27:19,944 - #23 ;
INFO  18:27:19,944 - #28 }
INFO  18:27:19,945 - #32 else
INFO  18:27:19,952 - #34 if
INFO  18:27:19,961 - #25 (
INFO  18:27:19,962 - #43 size
INFO  18:27:19,963 - #14 <
INFO  18:27:19,963 - #43 x
INFO  18:27:19,964 - #16 &&
INFO  18:27:19,964 - #43 x
INFO  18:27:19,965 - #14 <
INFO  18:27:19,965 - #44 0
INFO  18:27:19,965 - #26 )
INFO  18:27:19,966 - #27 {
INFO  18:27:19,966 - #43 val
INFO  18:27:19,966 - #43 putn
INFO  18:27:19,967 - #25 (
INFO  18:27:19,967 - #43 val
INFO  18:27:19,968 - #43 getn
INFO  18:27:19,968 - #25 (
INFO  18:27:19,969 - #43 x
INFO  18:27:19,969 - #26 )
INFO  18:27:19,970 - #5 +
INFO  18:27:19,970 - #44 1
INFO  18:27:19,970 - #26 )
INFO  18:27:19,970 - #23 ;
INFO  18:27:19,971 - #28 }
INFO  18:27:19,971 - #36 read
INFO  18:27:19,972 - #25 (
INFO  18:27:19,972 - #43 x
INFO  18:27:19,972 - #26 )
INFO  18:27:19,973 - #23 ;
INFO  18:27:19,973 - #28 }
INFO  18:27:19,973 - #43 while
INFO  18:27:19,974 - #25 (
INFO  18:27:19,974 - #45 true
INFO  18:27:19,974 - #26 )
INFO  18:27:19,975 - #23 ;
INFO  18:27:19,975 - #31 print
INFO  18:27:19,975 - #25 (
INFO  18:27:19,976 - #43 x
INFO  18:27:19,976 - #14 <
INFO  18:27:19,976 - #44 0
INFO  18:27:19,977 - #46 '-'
INFO  18:27:19,978 - #46 '+'
INFO  18:27:19,978 - #26 )
INFO  18:27:19,978 - #23 ;
INFO  18:27:19,978 - #28 }
INFO  18:27:19,979 - #28 }
